Ext.data.JsonP.palette({"tagname":"class","name":"palette","autodetected":{},"files":[{"filename":"palette.js","href":"palette.html#palette"}],"extends":"view","members":[{"name":"drop","tagname":"attribute","owner":"palette","id":"attribute-drop","meta":{}},{"name":"dropTest","tagname":"attribute","owner":"palette","id":"attribute-dropTest","meta":{}},{"name":"items","tagname":"attribute","owner":"palette","id":"attribute-items","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-palette","classIcon":"icon-class","superclasses":["view"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>view<div class='subclass '><strong>palette</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/palette.html#palette' target='_blank'>palette.js</a></div></pre><div class='doc-contents'><p>A palatte is a container view with drag-dropable components</p>\n\n<iframe style=\"border:0;width:900px;height:300px\" src=\"/apps/docs/example#path=$root/widgets/palette.js\"></iframe>\n\n\n<p><a target=\"blank\" href=\"/apps/docs/example#path=$root/widgets/palette.js\">open example in new tab &raquo;</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-attribute'>Attributes</h3><div class='subsection'><div id='attribute-drop' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='palette'>palette</span><br/><a href='source/palette.html#palette-attribute-drop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/palette-attribute-drop' class='name expandable'>drop</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Function to call globally when dropping a palette item onto a view. ...</div><div class='long'><p>Function to call globally when dropping a palette item onto a view.\nThis can also be defined on the individual components to override behavior.\nThe signature of the function is function(dropevent,view,item,origevent,dropview){}</p>\n<p>Defaults to: <code>&quot;undefined&quot;</code></p></div></div></div><div id='attribute-dropTest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='palette'>palette</span><br/><a href='source/palette.html#palette-attribute-dropTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/palette-attribute-dropTest' class='name expandable'>dropTest</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Function to call globally when testing if a palette item can be dropped onto another view. ...</div><div class='long'><p>Function to call globally when testing if a palette item can be dropped onto another view.\nThis can also be defined on the individual components to override behavior.\nThe signature of the function is function(dropevent,view,item,origevent,dropview){}</p>\n<p>Defaults to: <code>&quot;undefined&quot;</code></p></div></div></div><div id='attribute-items' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='palette'>palette</span><br/><a href='source/palette.html#palette-attribute-items' target='_blank' class='view-source'>view source</a></div><a href='#!/api/palette-attribute-items' class='name expandable'>items</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The items to render into the palette. ...</div><div class='long'><p>The items to render into the palette.  This is either an array of components, or an Object where\nevery key:value pair is a Section Name : components-array pair.\nEach component is an Object with <code>label</code> and <code>desc</code> properties, in addition to one of\n<code>image</code>, <code>icon</code>, or <code>text</code> properties.  <code>image</code> is the url or file path to an image, icon is the\nFontAwesome icon identifier, and <code>text</code> is simply some printed text.</p>\n<p>Defaults to: <code>&quot;undefined&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});